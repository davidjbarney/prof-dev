setwd("~/Dropbox/GitHub/r-survey-demo")
## Read in the 2015 CCES data with Haven
library(haven)
cces16 <- read_dta("../Data/2016 CCES/CCES16_Common_OUTPUT_Feb2018_VV.dta")
cces16 <- read_dta("../../Data/2016 CCES/CCES16_Common_OUTPUT_Feb2018_VV.dta")
library(haven)
cces16 <- read_dta("../../Data/2016 CCES/CCES16_Common_OUTPUT_Feb2018_VV.dta")
cces16$agecats <- cut(cces16$age,
breaks=c(-Inf, 35, 50, Inf),
labels=c("35 and Under","36 to 50","Over 50"))
# Create the age variable
cces16$age <- 2016 - cces16$birthyr
cces16$agecats <- cut(cces16$age,
breaks=c(-Inf, 35, 50, Inf),
labels=c("35 and Under","36 to 50","Over 50"))
warnings()
rm(list=ls())
library(haven)
cces16 <- read_dta("../../Data/2016 CCES/CCES16_Common_OUTPUT_Feb2018_VV.dta")
#Create a new vector to work with
cces16$ban_ar <- cces16$CC16_330d
#Attitudes toward gun control
#Call all values for "oppose" and replace with zero
cces16$ban_ar[cces16$ban_ar==2] <- 0
#Call all values for skipped / not asked and replace with missing
cces16$ban_ar[cces16$ban_ar==8] <- NA
cces16$ban_ar[cces16$ban_ar==9] <- NA
#Create a new vector to work with
cces16$pid <- cces16$pid7
#Recode values to missing
cces16$pid[cces16$pid==98] <- NA
cces16$pid[cces16$pid==99] <- NA
cces16$pid[cces16$pid==8] <- NA
#Collapse the categories
cces16$pid[cces16$pid==2] <- 1
cces16$pid[cces16$pid==3] <- 1
cces16$pid[cces16$pid==4] <- 2
cces16$pid[cces16$pid==5] <- 3
cces16$pid[cces16$pid==6] <- 3
cces16$pid[cces16$pid==7] <- 3
# Create the age variable
cces16$age <- 2016 - cces16$birthyr
cces16$agecats <- cut(cces16$age,
breaks=c(-Inf, 35, 50, Inf),
labels=c("35 and Under","36 to 50","Over 50"))
#Flip the coding
cces16$pid_reverse <- 4 - cces16$pid
cces16$pid_reverse <- factor(cces16$pid_reverse,
levels = c(1,2,3),
labels = c("Republican", "Independent",
"Democrat"))
#Load the supplemental data
cces16s <-  read.delim("/../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
#Load the supplemental data
cces16s <-  read.table("/../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
setwd("~/Dropbox/GitHub/r-survey-cheat-sheet")
#Load the supplemental data
cces16s <-  read.table("/../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
#Load the supplemental data
cces16s <-  read.table("/../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
#Load the supplemental data
cces16s <-  read.table("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
#Load the supplemental data
cces16s <-  read.tab("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab")
#Load the supplemental data
cces16s <-  read.table("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.tab", header = TRUE)
#Load the supplemental data
cces16s <-  read.csv("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.csv")
warnings()
#Load the supplemental data
cces16s <-  read.csv("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.csv")
#Merge the primary and supplemental data by respondent state
cces16c <- merge(cces16, cces16s)
rm(list=ls())
library(haven)
cces16 <- read_dta("../../Data/2016 CCES/CCES16_Common_OUTPUT_Feb2018_VV.dta")
#Create a new vector to work with
cces16$ban_ar <- cces16$CC16_330d
#Attitudes toward gun control
#Call all values for "oppose" and replace with zero
cces16$ban_ar[cces16$ban_ar==2] <- 0
#Call all values for skipped / not asked and replace with missing
cces16$ban_ar[cces16$ban_ar==8] <- NA
cces16$ban_ar[cces16$ban_ar==9] <- NA
#Create a new vector to work with
cces16$pid <- cces16$pid7
#Recode values to missing
cces16$pid[cces16$pid==98] <- NA
cces16$pid[cces16$pid==99] <- NA
cces16$pid[cces16$pid==8] <- NA
#Collapse the categories
cces16$pid[cces16$pid==2] <- 1
cces16$pid[cces16$pid==3] <- 1
cces16$pid[cces16$pid==4] <- 2
cces16$pid[cces16$pid==5] <- 3
cces16$pid[cces16$pid==6] <- 3
cces16$pid[cces16$pid==7] <- 3
# Create the age variable
cces16$age <- 2016 - cces16$birthyr
cces16$agecats <- cut(cces16$age,
breaks=c(-Inf, 35, 50, Inf),
labels=c("35 and Under","36 to 50","Over 50"))
#Flip the coding
cces16$pid_reverse <- 4 - cces16$pid
cces16$pid_reverse <- factor(cces16$pid_reverse,
levels = c(1,2,3),
labels = c("Republican", "Independent",
"Democrat"))
#Load the supplemental data
cces16s <-  read.csv("../../Data/2016 CCES Supplementary/CC16_Candidates_By_Race.csv")
#Merge the primary and supplemental data by respondent state
cces16c <- merge(cces16, cces16s)
#Merge by state with different column names
rm(cces16c)
cces16c <- merge(cces16, cces16s,
by.x = "inputstate",
by.y = "inputstate")
summary(cces16$age)
#Mean
mean(cces16$age)
#Standard deviation
sd(cces16$age)
#Minimum
min(cces16$age)
#Maximum
max(cces16$age)
#Range
range(cces16$age)
#Quantiles
quantile(cces16$age)
# Tabulate PID
prop.table(table(cces16$pid_reverse))
# Tabulate PID by age categories
pidxage <- table(cces16$pid_reverse, cces16$agecats)
pidxage
prop.table(pidxage,2)
#Create a dataframe of the variables of interest
subgroup_vars <- c("age","pid")
subgroup_matrix <- as.matrix(cces16[subgroup_vars])
subgroup_df <- as.data.frame(subgroup_matrix)
aggregate(subgroup_df$age, list(subgroup_df$pid), mean)
library(dplyr)
subgroup_means <- subgroup_df %>%
group_by(pid) %>%
summarise(mean = mean(age))
subgroup_means
pid_labels <- c("Democrat", "Independent", "Republican")
sg_bp <- ggplot(subgroup_means, aes(y=mean, x=pid)) +
geom_bar(fill="lightskyblue",stat="identity") +
#xlab("Partisanship") +
ylab("Mean Age") +
scale_x_discrete(name = "Partisanship",
limits=pid_labels)
library(ggplot2)
pid_labels <- c("Democrat", "Independent", "Republican")
sg_bp <- ggplot(subgroup_means, aes(y=mean, x=pid)) +
geom_bar(fill="lightskyblue",stat="identity") +
#xlab("Partisanship") +
ylab("Mean Age") +
scale_x_discrete(name = "Partisanship",
limits=pid_labels)
sg_bp <- sg_bp + coord_cartesian(ylim=c(45,55))
sg_bp
```{r}
#Histogram for age
library(ggplot2)
age_matrix <- as.matrix(cces16$age)
age_df <- as.data.frame(age_matrix)
ggplot(data = age_df, aes(x=age_df)) +
geom_histogram(binwidth = 1) +
xlab("Age of Respondent") +
ylab("Frequency")
```
```{r}
#Density plot
ggplot(data = age_df, aes(x=age_df)) +
geom_density(fill="lightblue") +
xlab("Age of Respondent") +
ylab("Density")
```
# Modeling
## OLS Regression
```{r}
# Prepare Obama approval as the DV
cces16$oa <- cces16$CC16_320a
cces16$oa[cces16$oa=="5"] <- NA
cces16$oa[cces16$oa=="8"] <- NA
cces16$oa <- 5 - cces16$oa
# Fit the OLS model
olsfit <- lm(oa ~ pid + ideology +
gender + white + edu + age,
data = cces16)
# Print the model summary
summary(olsfit)
```
## Logistic Regression
```{r}
## Logistic Regression
# Prepare preference for AR ban as DV
cces16$ban_ar <- cces16$CC16_330d
cces16$ban_ar[cces16$ban_ar==2] <- 0
cces16$ban_ar[cces16$ban_ar==8] <- NA
cces16$ban_ar[cces16$ban_ar==9] <- NA
# Fit the logit model
lfit <- glm(ban_ar ~ pid + agecats + edu +
gender + white + ideology,
data=cces16, family = binomial())
# Print the model summary
summary(lfit)
```
## Ordinal Logistic Regression
```{r}
## Ordinal Logistic Regression
# Convert Obama approval to a factor
cces16$oaf <- factor(cces16$oa)
library(MASS)
# Fit the ordinal logit model
olfit <- polr(oaf ~ pid + ideology +
gender + white + edu + age,
data = cces16, Hess = TRUE)
# Print the model summary
summary(olfit)
```
## Multinomial Logistic Regression
```{r}
## Multinomial Logistic Regression
## Create a 2012 vote choice factor variable
cces16$vc <- cces16$CC16_326
cces16$vc[cces16$vc=="4"] <- NA
cces16$vc[cces16$vc=="5"] <- NA
cces16$vc <- factor(cces16$vc,
levels = c(1,2,3),
labels = c("Obama", "Romney","Other"))
library(nnet)
# Fit the multinomial logit model
mlfit <- multinom(vc ~ pid + agecats + edu +
gender + white + ideology,
data=cces16)
# weights:  27 (16 variable)
```
```{r}
# Print the model summary
summary(mlfit)
```
# `survey` Package
All examples in this section require the `survey` package:
```{r}
library(survey)
```
## Weighted Tabulations
```{r}
## WITHOUT WEIGHTING
# Tabulate PID
prop.table(table(cces16$pid_reverse))
```
```{r}
## WITHOUT WEIGHTING
# Tabulate PID by age categories
pidxage <- table(cces16$pid_reverse, cces16$agecats)
pidxage
prop.table(pidxage,2)
```
```{r}
## WITH WEIGHTING
# Create a survey design dataframe
svy.cces16 <- svydesign(ids = ~1,
data = cces16,
weights = cces16$commonweight_vv)
# Weighted tabulation of PID
prop.table(svytable(~cces16$pid_reverse, design = svy.cces16))
```
```{r}
## WITH WEIGHTING
# Weighted tabulation of PID by age categories
prop.table(svytable(~cces16$pid_reverse+cces16$agecats,
design = svy.cces16),2)
```
## Weighted Models
```{r}
## WITHOUT WEIGHTING
# Run a logit regression for attitudes toward gun control
fit <- glm(ban_ar ~ pid_reverse + agecats + edu +
gender + white + ideology,
data=cces16, family = binomial())
summary(fit)
```
```{r}
## WITH WEIGHTING
wfit <- svyglm(ban_ar ~ pid_reverse + agecats + edu +
gender + white + ideology,
design=svy.cces16, family = binomial())
summary(wfit)
```
# Creating Post-Stratification Weights
In progress.
cces16$ideo5
cces16$educ
rm(list=ls())
